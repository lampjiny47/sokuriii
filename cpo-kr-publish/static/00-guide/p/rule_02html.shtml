<!DOCTYPE html>
<html lang="ko">
<head>
	<!--#include file="/00-guide/p/guide_inc/guide_top.shtml"-->
</head>
<body>
<!-- WRAP -->
<div id="wrap">
	<!--#include file="/00-guide/p/guide_inc/guide_head.shtml"-->
	<!-- container -->
	<div id="container">
		<!-- left -->
		<div id="sideMenu">
			<ul class="navigation">
				<li><button id="item1">HTML</button>
					<ul class="sub">
						<li><button id="item1_1">기본 규칙</button></li>
						<li><button id="item1_2">전역 구조화</button></li>
						<li><button id="item1_3">Form</button></li>
						<li><button id="item1_4">Table</button></li>
						<li><button id="item1_5">ol, ul, li, dl, dt, dd</button></li>
						<li><button id="item1_6">기타</button></li>
					</ul>
				</li>
				<li><button id="item2">include Sample</button>
					<ul class="sub">
						<li><button id="item2_1">PC - 기본 1</button></li>
						<li><button id="item2_2">PC - Layer 1</button></li>
					</ul>
				</li>
			</ul>
		</div>
		<!-- left -->
		<!-- contents -->
		<div id="contents">

			<h3>HTML</h3>
			<div id="uio_item1_1" class="component">
				<h4>기본 규칙</h4>
				<ol class="no">
					<li>HTML 구조는 컨텐츠에 맞게 최소화 한다. (디자인을 위한 HTML 구조 지양)</li>
					<li>span, u, i, em 등 inline 태그를 Layout을 위한 태그 사용을 지양한다.</li>
					<li>컨텐츠와 컨텐츠 사이의 여백은 bottom에서만 허용한다.</li>
				</ol>
				<h4>네이밍 규칙</h4>
				<p class="summary">
					파일명은 스토리보드 화면 ID 정책을 따른다.
				</p>
				<h4>HTML 코드 작성 규칙</h4>
				<ol class="dot01">
					<li>들여쓰기
						<br />HTML 코드를 작성 시 <strong>가독성을 높이기 위하여</strong> 왼쪽 첫 번째 열부터 오른쪽으로 일정한 간격만큼 띄어 쓴다.
						<br />간격은 Tab (스페이스 4칸)으로 띄우는 것을 원칙으로 한다.
						<br />
					</li>
					<li>빈 줄
						<br />HTML 코드의 빈 줄은 코드 그룹의 영역을 표시하기 위하여 사용한다.
						<br />
					</li>
					<li>DTD 및 인코딩 선언
						<br />DTD(Document Type Definition)는 SGML(Standard Generalized Markup Language) 계열 마크업 언어의 문서 타입을 정의하는 것으로서, 해당 HTML 문서가 어떤 버전의 HTML 로 작성되었는지, 어떤 규칙으로 내용을 기술하고 어떤 엘리먼트와 애트리뷰트, 애트리뷰트값을 지정할 수 있는지 정의한다. 또한 인코딩을 선언하여 문서에서 사용되는 문자 코드 세트를 지정한다. DTD와 인코딩 선언은 HTML 문서가 브라우저에서 바르게 해석될 수 있도록 한다.
					</li>
					<li>주석
						<br />HTML 코드의 주석은 코드 그룹을 구분하거나, 코드의 수정과 삭제를 표시하거나, 개발자가 참고해야 하는 사항을 기술한다.
					</li>
					<li>특정 엘리먼트에 class, style을 선언할 때는 선언 순서를 준수한다.
						<br />class와 style은 제일 뒷부분에 선언한다.

<pre class="brush: html;">
<input type="text" id="user_id" class="text" style="width:100px;" />
</pre>

					</li>
				</ol>
			</div>
			<div id="uio_item1_2" class="component">
				<h4>전역 구조화 엘리먼트</h4>
				<h6>HTML DOCTYPE</h6>
				<p class="summary">DTD 및 인코딩 선언
						<br />DTD(Document Type Definition)는 SGML(Standard Generalized Markup Language) 계열 마크업 언어의 문서 타입을 정의하는 것으로서, 해당 HTML 문서가 어떤 버전의 HTML 로 작성되었는지, 어떤 규칙으로 내용을 기술하고 어떤 엘리먼트와 애트리뷰트, 애트리뷰트값을 지정할 수 있는지 정의한다. 또한 인코딩을 선언하여 문서에서 사용되는 문자 코드 세트를 지정한다. DTD와 인코딩 선언은 HTML 문서가 브라우저에서 바르게 해석될 수 있도록 한다.
					</p>
				<div class="summary2">
					&lt;! DOCTYPE> 선언은 HTML 문서에서 &lt;html> 태그보다 먼저 있어야 한다.
					<br />&lt;! DOCTYPE> 선언은 페이지가 쓰여지는 HTML의 버전에 대한 웹 브라우저의 지시입니다.
					
<pre class="brush: html;">
&lt;!DOCTYPE html>
</pre>
				</div>
				<h6>&lt;html&gt;</h6>
				<p class="summary2">
					다음과 같이 lang 애트리뷰트를 선언한다.
						<br />class 애트리뷰트는 선언하지 않는다.
						<br /><span class="col01">&lt;html lang="ko"&gt;</span>
						<br />lang 애트리뷰트는 User Agent가 언어를 올바르게 해석할 수 있게 도와주며, 검색과 음성장치(speech synthesizers)에 활용된다. 
					
				</p>
				<h6>&lt;head&gt;</h6>
				<div class="summary2">
					Meta, title, link, script, style 순서로 엘리먼트를 선언한다.
<pre class="brush: html;">
&lt;!DOCTYPE html>
&lt;html lang="ko">
&lt;head>
	&lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8">
	&lt;meta http-equiv="Content-Script-Type" content="text/javascript">
	&lt;meta http-equiv="Content-Style-Type" content="text/css">
	&lt;title>페이지 제목</title>
	&lt;link rel="stylesheet" type="text/css" href="">
	&lt;script type="text/javascript" src=""></script>
	&lt;style type="text/css">
	&lt;/style>
&lt;/head>

</pre>

					
				</div>
				<h6>&lt;meta&gt;</h6>
				<p class="summary2">
					문서의 기본 인코딩, 뷰포트, 스크립트 형식, 스타일 형식 순서로 엘리먼트를 선언한다.
				</p>
				<h6>&lt;title&gt;</h6>
				<p class="summary2">
					&lt;title> 모든 페이지의 title 은 해당 페이지의 특성에 맞게 정의해줘야 하며 해당 타이틀의 기준 규칙에 대해서는 퍼블리싱이 시작하기 전에,
					<br /><span class="col01">고객과 사전 협의</span>해야 한다.
				</p>
				<h6>&lt;link&gt;</h6>
				<div class="summary2">
					rel, type, href 순서로 애트리뷰트를 선언한다.
<pre class="brush: html;">
<link rel="stylesheet" type="text/css" href="">
</pre> 
				</div>
				<h6>&lt;script&gt;</h6>
				<div class="summary2">
					type, src 순서로 애트리뷰트를 선언한다.
					<br />- script의 Library &lt;head>&lt;/head> 내에 선언하는 것을 원칙으로 한다.
					<br />- 이외 파일은 모두 HTML 문서 최하단에 선언 위치를 변경한다.
				</div>
				<h6>&lt;style&gt;</h6>
				<div class="summary2">
					Type 에트리뷰트를 선언한다
				</div>
				<h6>&lt;body&gt;</h6>
				<div class="summary2">
					Class 애트리뷰트는 웹페이지의 스킨셋을 변경해야 할 때 선택적으로 사용한다.
				</div>
			</div>
			<div id="uio_item1_3" class="component">
				<h4>Form 엘리먼트</h4>
				<p class="summary">
					폼 컨트롤 엘리먼트를 마크업할 때 &lt;form> 은 개발쪽에서 위치 선언할 수 있도록 퍼블리싱 파트에서는 작성하지 않는다.
					&lt;fieldset>, &lt;legend> 엘리먼트를 다음과 같이 사용한다.
					<br />단, 필요에 따라 개별적으로 사용할 수 있다.
				</p>
<pre class="brush: html;">
<fieldset>
<legend>개인정보</legend>
 [ form control element here ]
</fieldset>
</pre> 
				<h6>fieldset</h6>
				<p class="summary">
					&lt;form> Element의 자식 노드로 선언하여 폼 컨트롤 Element들을 그루핑하기 위해 선언한다.
				</p>
<pre class="brush: html;">
<fieldset>
<legend>개인정보</legend>
 [ form control element here ]
</fieldset>
</pre> 

				<h6>legend</h6>
				<p class="summary">
					폼 컨트롤 그룹인 &lt;fieldset>의 자식 Element로서 폼 콘트롤 Element들의 그룹 이름을 표현하기 위해 선언한다.
				</p>
				<h6>input</h6>
				<ol class="dot01">
					<li>&lt;label> Element, title Attribute, alt Attribute를 통해 스크린 리더 사용자는 주변 맥락에 대한 이해 없이 각 Element에 독립적으로 접근해도 폼을 이해할 수 있다.</li>
					<li>웹접근성 항목은 6. 웹접근성 보장 방법을 참고한다.</li>
					<li>type="text"인 경우 type, id, title, value, accesskey, class, stye 순서로 Attribute를 선언한다.</li>
					<li>동일한 스타일의 텍스트필드이나 너비값이 다를 경우 style Attribute를 이용하여 width값을 제어한다.</li>
					<li>type="checkbox", type="radio" 인 경우 type, name, id, checked, class 순서로 Attribute를 선언한다.</li>
					<li>그루핑이 필요하면 선택적으로 name Attribute를 이용하여 항목들을 그루핑한다.</li>
					<li>type="image"인 경우, type, src, alt, class 순서로 Attribute를 선언한다.</li>
					<li>type="file"인 경우, type, class, style 순서로 Attribute를 선언한다.</li>
				</ol>
<pre class="brush: html;">
<label for="user_id">아이디</label><input tye="text" id="user_id" name="user_id" />
<input type="image" src="btn_confirm.gif" alt="확인" />

<label for="num1">유선전화</label>
<input type="text" id="num1" name="num1" title="지역번호" />


<input type="text" id="user_id" title="사용자ID" value="아이디를 입력하세요" accesskey="1" class="text" style="width:100px;" />


<input type="radio" name="v_align" id="align_lft" checked="checked" /><label for="align_lft">왼쪽 정렬</label>
<input type="radio" name="v_align" id="align_cnt" /><label for="align_cnt">가운데 정렬</label>
<input type="radio" name="v_align" id="align_rgt" /><label for="align_rgt">오른쪽 정렬</label>

<input type="checkbox" name="sports" id="soccer" checked="checked" /><label for="soccer">축구</label>
<input type="checkbox" name="sports" id="basketball" /><label for="basketball">농구</label>
<input type="checkbox" name="sports" id="tennis" /><label for="tennis">테니스</label>

</pre>
				
				<h6>select</h6>
				<p class="summary">
					동일한 스타일의 셀렉트 박스이나 너비값이 다르면 선택적으로 style Attribute를 이용하여 width값을 제어한다.
				</p>
				<h6>label</h6>
				<ol class="dot01">
					<li>&lt;input&gt;, &lt;select&gt;, &lt;textarea&gt;와 같은 폼 Element는 for Attribute를 부여하여 해당 Element의 id값과 동일한 이름으로 연결한다.</li>
					<li>단, 레이블 명이 위치할 공간이 없는 경우 title Attribute로 대체할 수 있다.</li>
					<li>단, label 안에 &lt;input&gt; Element가 있는 경우 for와 id로 연결하지 않아도 된다.</li>
					<li>Id / for 값은 개발자가 넣는 것을 원칙으로 하며, 퍼블리싱 파트에서는 값을 넣지 않는다.</li>
				</ol>
				
				<h6>textarea</h6>
				<p class="summary">
					cols, rows, class 순서로 Attribute를 선언한다.
				</p>
			</div>
			<div id="uio_item1_4" class="component">
				<h4>Table 엘리먼트</h4>
<pre class="brush: html;">
<table summary="장바구니">
<caption>장바구니 상품</caption>
<colgroup>
	<col style="width:10%" />
	<col style="width:10%" />
	<col style="width:10%" />
</colgroup>
<thead>
<tr>
	<th>구분</th>
	<th scope="col" abbr="가격">가격(won)</th>
	<th scope="col" abbr="열량">열량(kcal)</th>
</tr>
</thead>
<tfoot>
<tr>
	<th>계</th>
	<td>6,500</td>
	<td>650</td>
</tr>
</tfoot>
<tbody>
<tr>
	<th scope="row">자장면</th>
	<td>3,000</td>
	<td>300</td>
</tr>
<tr>
	<th scope="row">짬뽕</th>
	<td>3,500</td>
	<td>350</td>
</tr>
</tbody>
</table>
</pre>

				<h6>table</h6>
				<p class="summary">
					일반적으로 레이아웃을 표현하기 위해 사용하지 않고, 2차원의 격자형 데이터를 표현하기 위해 사용한다. 표의 요약 내용을 표기해야 할 때 summary Attribute를 선택적으로 사용할 수 있다.
				</p>
				<h6>caption</h6>
				<p class="summary">
					표의 제목을 표현하기 위해 사용한다. Caption Element는 <span class="col01">반드시 선언한다</span>. 표제에 대해서는 사전 기획자와 협의하여 규칙을 준수하도록 한다.
				</p>
				<h6>colgroup</h6>
				<p class="summary">
					&lt;col&gt; Element를 그루핑하여 디자인을 제어할 때 선언한다.
				</p>
				<h6>col</h6>
				<p class="summary">
					표 각 열의 너비 지정을 위해 선언한다. width값은 % 단위로 <span class="col01">선언하는 걸 원칙으로 한다</span>.
				</p>
				<h6>thead</h6>
				<p class="summary">
					표 머리글을 그루핑할 때 선언한다. 이 Element는 th Element로만 구루핑되어 있을 때 선언한다. 이 Element는 <span class="col01">선택적으로 사용한다</span>.
				</p>
				<h6>tfoot</h6>
				<p class="summary">
					표 바닥글을 그루핑할 때 선언한다. tfoot Element는 thead와 tbody Element 사이에 위치해야 한다. 이 Element는 선택적으로 사용한다.
				</p>
				<h6>tbody</h6>
				<p class="summary">
					표 본문을 그루핑하기 위해 선언한다. 테이블의 본문이 하나이고 <thead>, <tfoot>이 없을 경우 생략할 수 있다.
				</p>
				<h6>th</h6>
				<p class="summary">
					표에 셀 제목이 명시되지 않은 경우에도 &lt;th&gt; Element를 필수로 선언하여 의미에 맞는 제목을 명시한다. (화면에 표시되지 않도록 css로 숨김 처리)
					Scope Attribute는 반드시 선언해야 한다.<br />
					Abbr, id Attribute는 선택적으로 사용한다.
				</p>
				<ol class="dot01">
					<li>
						Scope Attribute는 &lt;th> Element에 동반되는 Attribute로서 현재의 셀이 어느 셀의 제목인지 범위를 명시한다.<br />
						&lt;scope> Attribute의 값으로는 col, colgroup, row, rowgroup이 있다.
					</li>
					<li>
						Abbr Attribute는 &lt;th> Element에 동반되는 Attribute로서 포함하고 있는 콘텐츠를 축약하여 표기할 수 있을 때 약어를 표기하는 데 사용한다.<br />
						헤딩 셀의 내용을 반복해서 음성으로 출력하는 도구들은 abbr Attribute에 표기된 약어를 읽는다.
					</li>
				</ol>
			</div>
			<div id="uio_item1_5" class="component">
				<h4>ol, ul, li, dl, dt, dd 엘리먼트</h4>
				<p class="summary">
				</p>
			</div>
			<div id="uio_item1_6" class="component">
				<h4>기타 엘리먼트</h4>
				<h6>a</h6>
				<p class="summary">
					href, target, title 순서로 Attribute를 선언한다.
				</p>
				<h6>iframe</h6>
				<p class="summary">
					&lt;iframe&gt;은 페이지 성능에 영향을 주기 때문에 가급적 사용하지 않는다.<br />
					부득이하게 사용해야 하는 경우, src, width, height, title, frameborder, marinwidth, marinheight, scrolling 순서로 Attribute를 선언한다.<br />
					스크린 리더 사용자를 위해 title Attribute에 제목을 표기한다.<br />
					iframe 사용 시 다음과 같은 문제점이 있다.
				</p>
				<ol class="dot01">
					<li>iframe을 포함하는 페이지의 도메인과 iframe에서 불러오는 페이지의 도메인이 다르면, 크로스 도메인 설정을 위해 별도의 소스 코드가 추가되어 성능에 영향을 줄 수 있다.</li>
					<li>iframe의 높이값이 콘텐츠에 따라 유동적이어야 한다면 별도의 자바스크립트 코드가 추가되어 성능에 영향을 줄 수 있다.</li>
					<li>검색 엔진에서 iframe의 내용을 추출하여 표시하면 전체 페이지의 레이아웃이 비정상적으로 보일 수 있으며, 주변 맥락(머리글, 바닥글, 메뉴)이 노출되지 않아 검색 엔진 최적화(SEO) 관점에서 적합하지 않다.</li>
					<li>iframe은 가장 마지막으로 로딩되기 때문에 페이지 로딩 초기에는 화면이 비어 보일 수 있다.</li>
					<li>모바일에서는 iframe 스크롤에 대한 렌더링 브라우저별로 다르며, CSS 말 줄임이 동작하지 않는 브라우저가 있다.</li>
					<li>접근성 보장을 위해 유관부서와 협의 가능 여부를 판단하여 아래 안 중 하나를 선택할 수 있다.<br />
<pre class="brush: html;">
<iframe>iframe 미지원 장치에서는 내용을 확인할 수 없습니다.</iframe>
<iframe><a href="아이프레임 링크"></a></iframe>
</pre>
					</li>
				</ol>
				<h6>img</h6>
				<ol class="dot01">
					<li>src, width, height, title, alt, usemap 순서로 Attribute를 선언한다.</li>
					<li>이미지 내용과 동일한 값을 alt Attribute에 표기하여, 이미지를 볼 수 없는 환경(스크린 리더, 이미지 서버 장애, 이미지 표시 하지 않음 설정)에서도 내용을 확인할 수 있게 한다.</li>
					<li>Title Attribute를 선언한 경우에도 alt Attribute를 함께 선언한다.</li>
					<li>Title Attribute는 alt Attribute값을 축약하거나 브라우저에 독립적으로 툴팁을 표현하기 위해 사용한다.</li>
				</ol>
				<h6>map</h6>
				<p class="summary">
						&lt;map&gt; Element의 name Attribute를 선언하여 &lt;img&gt; Element의 usemap Attribute와 같은 이름으로 커플링한다.
				</p>
				<h6>area</h6>
				<p class="summary">
					Shape, cords, href, target, title, alt 순서로 Attribute를 선언한다.
				</p>
			</div>

			<h3>include Sample</h3>
			<div id="uio_item2_1" class="component">
<pre class="brush: html;">

&lt;!DOCTYPE html>
&lt;html lang="ko">
&lt;head>
	&lt;meta charset="UTF-8">
	&lt;title>상단 title type 1:현대차 CUV</title>
	&lt;!--#include file="../H_inc/common_meta.shtml"-->
&lt;/head>
&lt;body>
&lt;!--#include file="../H_inc/common_skip.shtml"-->
&lt;!--#include file="../H_inc/layout_loading.shtml"-->
&lt;!-- cpo wrap -->
<div id="CPOwrap">
	<div id="CPOheader">
		&lt;!--#include file="../H_inc/layout_header.shtml"-->
		&lt;!--  s: title area : 검색결과  -->
		<div class="h_search" id="stickyTit">
			<button type="button" class="icon_back search-toggle">뒤로가기</button>
			<input type="text" class="inp_sch" value="더 뉴 그랜저 가솔린 3.3 캘리그래피">
			
			<button type="button" class="icon_clear"><img src="../../img/search_clear.svg" alt=""></button>
			<button type="button" class="icon_filter"><img src="../../img/top_filter.svg" alt=""></button>
		</div>
		&lt;!--  e: title area : 검색결과  -->
	</div>
	&lt;!-- ////////////////////     header   끝     ////////////////////-->
	&lt;!-- ////////////////////     contents 시작     ////////////////////-->
	<div id="CPOcontents">

	</div>
	&lt;!-- ////////////////////     contents 끝     ////////////////////-->
	&lt;!--#include file="../H_inc/layout_footer.shtml"-->
</div>
<!-- //cpo wrap -->
&lt;/body>
&lt;/html>


</pre>
		
			</div>
		</div>
		<!-- contents -->
	</div>
	<!-- //container -->
	<!--#include file="/00-guide/p/guide_inc/guide_footer.shtml"-->
</div>
<!-- //WRAP -->

</body>
</html>